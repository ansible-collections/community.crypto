---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: RedHat - Enable the dynamic CA configuration feature (RHEL up to 9)
  ansible.builtin.command: update-ca-trust force-enable
  when: ansible_os_family == 'RedHat' and ansible_distribution != "Fedora" and (ansible_distribution_major_version | int) < 10

- name: RedHat - Enable the dynamic CA configuration feature (RHEL 10+)
  ansible.builtin.command: update-ca-trust
  when: ansible_os_family == 'RedHat' and ansible_distribution != "Fedora" and (ansible_distribution_major_version | int) >= 10

- name: RedHat - Retrieve test cacert
  ansible.builtin.get_url:
    url: "http://ansible.http.tests/cacert.pem"
    dest: "/etc/pki/ca-trust/source/anchors/ansible.pem"
  when: ansible_os_family == 'RedHat'

- name: Get client cert/key
  ansible.builtin.get_url:
    url: "http://ansible.http.tests/{{ item }}"
    dest: "{{ remote_tmp_dir }}/{{ item }}"
  with_items:
    - client.pem
    - client.key

- name: Suse - Retrieve test cacert
  ansible.builtin.get_url:
    url: "http://ansible.http.tests/cacert.pem"
    dest: "/etc/pki/trust/anchors/ansible.pem"
  when: ansible_os_family == 'Suse'

- name: Debian - Retrieve test cacert
  ansible.builtin.get_url:
    url: "http://ansible.http.tests/cacert.pem"
    dest: "/usr/local/share/ca-certificates/ansible.crt"
  when: ansible_os_family == 'Debian'

- name: Redhat - Update ca trust
  ansible.builtin.command: update-ca-trust extract
  when: ansible_os_family == 'RedHat'

- name: Debian/Suse - Update ca certificates
  ansible.builtin.command: update-ca-certificates
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Suse'

- name: FreeBSD - Retrieve test cacert
  ansible.builtin.get_url:
    url: "http://ansible.http.tests/cacert.pem"
    dest: "/tmp/ansible.pem"
  when: ansible_os_family == 'FreeBSD'

- name: FreeBSD - Read test cacert
  ansible.builtin.slurp:
    src: "/tmp/ansible.pem"
  register: slurp
  when: ansible_os_family == 'FreeBSD'

- name: FreeBSD - Add cacert to root certificate store
  ansible.builtin.blockinfile:
    path: "/etc/ssl/cert.pem"
    block: "{{ slurp.content | b64decode }}"
  when: ansible_os_family == 'FreeBSD'

- name: MacOS - Retrieve test cacert
  when: ansible_os_family == 'Darwin'
  block:
    - ansible.builtin.uri:
        url: "http://ansible.http.tests/cacert.pem"
        return_content: true
      register: cacert_pem

    - ansible.builtin.raw: '{{ ansible_python_interpreter }} -c "import ssl; print(ssl.get_default_verify_paths().cafile)"'
      register: macos_cafile

    - ansible.builtin.blockinfile:
        path: "{{ macos_cafile.stdout_lines | first }}"
        block: "{{ cacert_pem.content }}"
