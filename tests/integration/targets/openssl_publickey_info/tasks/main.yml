---
####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

- name: Generate privatekey 1
  openssl_privatekey:
    path: '{{ remote_tmp_dir }}/privatekey_1.pem'

- name: Generate privatekey 2 (less bits)
  openssl_privatekey:
    path: '{{ remote_tmp_dir }}/privatekey_2.pem'
    type: RSA
    size: '{{ default_rsa_key_size }}'

- name: Generate privatekey 3 (ECC)
  openssl_privatekey:
    path: '{{ remote_tmp_dir }}/privatekey_3.pem'
    type: ECC
    curve: "{{ (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '6') | ternary('secp521r1', 'secp256k1') }}"
    # ^ cryptography on CentOS6 doesn't support secp256k1, so we use secp521r1 instead
    select_crypto_backend: cryptography

- name: Generate privatekey 4 (DSA)
  openssl_privatekey:
    path: '{{ remote_tmp_dir }}/privatekey_4.pem'
    type: DSA
    size: 1024

- name: Generate public keys
  openssl_publickey:
    privatekey_path: '{{ remote_tmp_dir }}/privatekey_{{ item }}.pem'
    path: '{{ remote_tmp_dir }}/publickey_{{ item }}.pem'
  loop:
    - 1
    - 2
    - 3
    - 4

- name: Prepare result list
  set_fact:
    info_results: {}

- name: Running tests with pyOpenSSL backend
  include_tasks: impl.yml
  vars:
    select_crypto_backend: pyopenssl
  when: pyopenssl_version.stdout is version('16.0.0', '>=')

- name: Prepare result list
  set_fact:
    pyopenssl_info_results: "{{ info_results }}"
    info_results: {}

- name: Running tests with cryptography backend
  include_tasks: impl.yml
  vars:
    select_crypto_backend: cryptography
  when: cryptography_version.stdout is version('1.2.3', '>=')

- name: Prepare result list
  set_fact:
    cryptography_info_results: "{{ info_results }}"

- block:
  - name: Dump pyOpenSSL results
    debug:
      var: pyopenssl_info_results
  - name: Dump cryptography results
    debug:
      var: cryptography_info_results
  - name: Compare results
    assert:
      that:
      - '  (pyopenssl_info_results[item] | dict2items | rejectattr("key", "equalto", "deprecations") | list | items2dict)
        == (cryptography_info_results[item] | dict2items | rejectattr("key", "equalto", "deprecations") | list | items2dict)'
    loop: "{{ pyopenssl_info_results.keys() | intersect(cryptography_info_results.keys()) | list }}"
  when: pyopenssl_version.stdout is version('16.0.0', '>=') and cryptography_version.stdout is version('1.2.3', '>=')
